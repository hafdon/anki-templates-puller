{
    "Card 1": {
        "Front": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Irish Word Pronunciations</title>\n        <style>\n            \n        </style>\n    </head>\n    <body>\n        <h1 class=\"{{Gender}}\">\n            {{Word}}\n        </h1>\n        <div class=\"dialect-selection\">\n            <label for=\"dialectSelect\"><strong>Select Pronunciation Dialect:</strong></label>\n            <select id=\"dialectSelect\">\n                <option value=\"\">-- Random --</option>\n                <option value=\"Connacht\">Connacht</option>\n                <option value=\"Ulster\">Ulster</option>\n                <option value=\"Munster\">Munster</option>\n            </select>\n            <button id=\"resetDialect\">Reset Selection</button>\n        </div>\n        <h3>Pronunciation:</h3>\n        <button id=\"btnPronunciation\">Play Pronunciation (Press 'Z')</button>\n        <!-- Audio element for primary pronunciation -->\n        <audio id=\"audioPronunciation\" preload=\"auto\"></audio>\n        <div class=\"forvo-link\">\n            <a href=\"https://forvo.com/search/{{Word}}\" target=\"_blank\">Listen to more pronunciations on Forvo</a>\n        </div>\n        <!-- New Section for Additional Audio URLs -->\n        {{#ForvoPronunciations}}\n        <div class=\"additional-audios\">\n            <h3>Additional Pronunciations:</h3>\n            <div id=\"additionalAudioContainer\"></div>\n        </div>\n        {{/ForvoPronunciations}}\n        <script>\n            // Retrieve the word from Anki\n            var word = \"{{Word}}\";\n\n            // Elements\n            var dialectSelect = document.getElementById(\"dialectSelect\");\n            var resetDialectBtn = document.getElementById(\"resetDialect\");\n            var btnPronunciation = document.getElementById(\"btnPronunciation\");\n            var audioPronunciation = document.getElementById(\"audioPronunciation\");\n\n            // Define available dialects with their corresponding codes and keyboard keys\n            var dialects = {\n                Connacht: { code: \"CanC\", label: \"Connacht\" },\n                Ulster: { code: \"CanU\", label: \"Ulster\" },\n                Munster: { code: \"CanM\", label: \"Munster\" },\n            };\n\n            // Array to store additional audio elements for keyboard shortcuts\n            var additionalAudios = [];\n\n            function setSelectedDialect(dialect) {\n                if (dialect) {\n                    localStorage.setItem(\"selectedDialect\", dialect);\n                    console.log(\"Dialect set to:\", dialect);\n                } else {\n                    localStorage.removeItem(\"selectedDialect\");\n                    console.log(\"Dialect selection cleared\");\n                }\n            }\n\n            function getSelectedDialect() {\n                var dialect = localStorage.getItem(\"selectedDialect\");\n                console.log(\"Retrieved dialect:\", dialect);\n                return dialect;\n            }\n\n            // Function to create a pronunciation button\n            // Since dialect selection is global, only one button is needed\n            function setupPronunciationButton() {\n                btnPronunciation.addEventListener(\"click\", function () {\n                    console.log(\"Play button clicked\");\n                    playPronunciation();\n                });\n            }\n\n            // Function to set up audio event listeners\n            function setupAudioEvents() {\n                audioPronunciation.addEventListener(\"play\", function () {\n                    btnPronunciation.classList.add(\"playing\");\n                });\n\n                audioPronunciation.addEventListener(\"ended\", function () {\n                    btnPronunciation.classList.remove(\"playing\");\n                });\n\n                audioPronunciation.addEventListener(\"pause\", function () {\n                    btnPronunciation.classList.remove(\"playing\");\n                });\n\n                audioPronunciation.addEventListener(\"error\", function () {\n                    btnPronunciation.disabled = true;\n                    btnPronunciation.title = \"Audio not available\";\n                });\n            }\n\n            function playPronunciation() {\n                var selectedDialect = getSelectedDialect();\n                var dialectCode;\n\n                if (selectedDialect && dialects[selectedDialect]) {\n                    dialectCode = dialects[selectedDialect].code;\n                } else {\n                    var dialectNames = Object.keys(dialects);\n                    var randomDialectName = dialectNames[Math.floor(Math.random() * dialectNames.length)];\n                    dialectCode = dialects[randomDialectName].code;\n                }\n\n                var encodedWord = encodeURIComponent(word);\n                audioPronunciation.src = \"https://www.teanglann.ie/\" + dialectCode + \"/\" + encodedWord + \".mp3\";\n\n                // Play the main pronunciation audio\n                audioPronunciation.play().catch((error) => {\n                    console.error(\"Autoplay failed for word {{Word}}: \", error);\n                    console.log(error.name, \" \", error.message, \" \", error.code);\n                });\n            }\n\n            // Function to initialize dialect selection\n            function initializeDialectSelection() {\n                // Set the dropdown to the stored dialect if any\n                var storedDialect = getSelectedDialect();\n                if (storedDialect && dialects[storedDialect]) {\n                    dialectSelect.value = storedDialect;\n                } else {\n                    dialectSelect.value = \"\";\n                }\n\n                // Event listener for dialect selection change\n                dialectSelect.addEventListener(\"change\", function () {\n                    var selected = dialectSelect.value;\n                    if (selected && dialects[selected]) {\n                        setSelectedDialect(selected);\n                        alert(\"Dialect set to \" + selected + \". This will apply to all cards in this review session.\");\n                    } else {\n                        setSelectedDialect(null);\n                        alert(\"Dialect selection cleared. Dialects will be chosen randomly.\");\n                    }\n                });\n\n                // Event listener for reset button\n                resetDialectBtn.addEventListener(\"click\", function () {\n                    dialectSelect.value = \"\";\n                    setSelectedDialect(null);\n                    alert(\"Dialect selection has been reset. Dialects will be chosen randomly.\");\n                });\n            }\n\n            // Add keyboard shortcut (Press 'Z') to play primary pronunciation\n            document.addEventListener(\"keydown\", function (event) {\n                console.log(event.key, event.altKey);\n\n                keymap = {\n                    \"¡\": 1,\n                    \"™\": 2,\n                    \"£\": 3,\n                    \"¢\": 4,\n                    \"∞\": 5,\n                };\n\n                // Prevent action if focus is on an input or textarea\n                var activeElement = document.activeElement;\n                if (activeElement && (activeElement.tagName === \"INPUT\" || activeElement.tagName === \"TEXTAREA\")) {\n                    return;\n                }\n\n                if (event.key.toLowerCase() === \"z\" && !event.altKey) {\n                    playPronunciation();\n                }\n\n                // Handle Option (Alt) + number keys for additional pronunciations\n                if (event.altKey) {\n                    const keyNumber = keymap[event.key];\n                    console.log(keyNumber);\n\n                    if (!isNaN(keyNumber) && keyNumber >= 1 && keyNumber <= additionalAudios.length) {\n                        var audioToPlay = additionalAudios[keyNumber - 1];\n                        if (audioToPlay) {\n                            // If the audio is already playing, pause it\n                            if (!audioToPlay.paused) {\n                                audioToPlay.pause();\n                            } else {\n                                audioToPlay.play();\n                            }\n                        }\n                    }\n                }\n            });\n\n            function setupAdditionalAudios() {\n                var additionalAudioContainer = document.getElementById(\"additionalAudioContainer\");\n                if (!additionalAudioContainer) return;\n\n                var audioUrlsRaw = \"{{ForvoPronunciations}}\".trim();\n                if (audioUrlsRaw === \"\") return;\n\n                // Split the sound syntax by spaces\n                var soundSyntaxes = audioUrlsRaw.split(/\\s+/);\n\n                soundSyntaxes.forEach(function (soundSyntax, index) {\n                    // Extract the filename from 'sound:filename.mp3'\n                    var filename = soundSyntax.replace(/^sound:/, \"\");\n\n                    // Create a container for each audio button and label\n                    var audioWrapper = document.createElement(\"div\");\n                    audioWrapper.style.marginBottom = \"10px\";\n\n                    // Create the play button with keyboard shortcut indication\n                    var playButton = document.createElement(\"button\");\n                    playButton.textContent = \"Play Audio \" + (index + 1) + \" (Option+\" + (index + 1) + \")\";\n                    playButton.classList.add(\"audio-button\");\n\n                    // Create the audio element\n                    var audioElement = document.createElement(\"audio\");\n                    // Reference the file directly; Anki will handle the media path\n                    audioElement.src = filename;\n                    audioElement.preload = \"auto\";\n\n                    // Store the audio element in the additionalAudios array for keyboard access\n                    additionalAudios.push(audioElement);\n\n                    // Event listeners for play/pause state\n                    playButton.addEventListener(\"click\", function () {\n                        if (audioElement.paused) {\n                            audioElement.play();\n                        } else {\n                            audioElement.pause();\n                        }\n                    });\n\n                    audioElement.addEventListener(\"play\", function () {\n                        playButton.classList.add(\"playing\");\n                        // Pause other audios\n                        pauseOtherAudios(audioElement);\n                    });\n\n                    audioElement.addEventListener(\"pause\", function () {\n                        playButton.classList.remove(\"playing\");\n                    });\n\n                    audioElement.addEventListener(\"ended\", function () {\n                        playButton.classList.remove(\"playing\");\n                    });\n\n                    audioElement.addEventListener(\"error\", function () {\n                        playButton.disabled = true;\n                        playButton.title = \"Audio not available\";\n                    });\n\n                    // Append button and audio to the wrapper\n                    audioWrapper.appendChild(playButton);\n                    audioWrapper.appendChild(audioElement);\n\n                    // Append the wrapper to the container\n                    additionalAudioContainer.appendChild(audioWrapper);\n                });\n            }\n\n            // Function to pause other additional audios when one starts playing\n            function pauseOtherAudios(currentAudio) {\n                var allAdditionalAudios = document.querySelectorAll(\".additional-audios audio\");\n                allAdditionalAudios.forEach(function (audio) {\n                    if (audio !== currentAudio && !audio.paused) {\n                        audio.pause();\n                    }\n                });\n            }\n\n            function initializeCard() {\n                setupPronunciationButton();\n                setupAudioEvents();\n                initializeDialectSelection();\n                setupAdditionalAudios();\n            }\n\n            // Call the initialize function on load\n            initializeCard();\n\n            // Optionally, auto-play the pronunciation on load\n            playPronunciation();\n        </script>\n    </body>\n</html>\n",
        "Back": "{{FrontSide}}\n\n<hr id=answer>\n\n\n\n <div class=\"text-container\">\n        <div class=\"foreground-text\">\n            {{Back}}\n        </div>\n        <div class=\"background-text\">\n            {{Frequency}}\n        </div>\n    </div>"
    }
}